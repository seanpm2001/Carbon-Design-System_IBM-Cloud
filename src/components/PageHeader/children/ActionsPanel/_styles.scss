@use "@carbon/react/scss/type";
@use '@carbon/react/scss/reset';
@import "@carbon/react/scss/colors";
@import "@carbon/react/scss/spacing";
@import "@carbon/react/scss/themes";
@import "@carbon/react/scss/theme";
@import "@carbon/react/scss/config";
@import "@carbon/react/scss/components/overflow-menu";
@import "@carbon/react/scss/components/button";

@mixin breakpoint($size) {
  @if map-has-key($grid-breakpoints, $size) {
    $breakpoint-key: map-get($grid-breakpoints, $size);

    @media screen and (min-width: map-get($breakpoint-key, "width")) {
      @content;
    }
  } @else {
    @media all and (min-width: $size) {
      @content;
    }
  }
}

.pal--actions-panel-sm {
  display: block;

  .#{$prefix}--overflow-menu__icon {
    width: 1.25rem;
    height: 1.25rem;
  }

  @include breakpoint("md") {
    display: none;
  }
}

.pal--actions-panel.#{$prefix}--overflow-menu {
  width: auto;
  height: auto;
  display: none;

  @include breakpoint("md") {
    display: block;
  }

  .#{$prefix}--btn {
    padding-right: 12px;
  }

  .pal--actions-panel-icon {
    margin-left: 60px;
    fill: $button-tertiary;
  }

  &:focus .#{$prefix}--btn--tertiary {
    background-color: $button-tertiary;
    color: $icon-inverse;
    box-shadow: inset 0 0 0 1px $layer-02;
  }

  &:hover .#{$prefix}--btn--tertiary .pal--actions-panel-icon,
  &:focus .#{$prefix}--btn--tertiary .pal--actions-panel-icon {
    fill: $icon-inverse;
  }

  &--open {
    outline-color: $text-on-color;
  }

  // Target Carbon component to rotate icon.
  &--open .pal--actions-panel-icon {
    fill: $icon-inverse;
    transform: rotate(180deg);
  }

  &--open .#{$prefix}--btn--tertiary {
    color: $icon-inverse;
    background-color: $button-tertiary;
  }
}

.pal--actions-panel-wrap {
  position: relative;
}

.pal--actions-panel-menu {
  right: 0 !important;
  top: 100% !important;
  left: auto !important;
}

.pal--actions-panel-menu::after {
  display: none;
}
